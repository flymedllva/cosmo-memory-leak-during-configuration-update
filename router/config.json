{"engineConfig":{"defaultFlushInterval":"500","datasourceConfigurations":[{"kind":"GRAPHQL","rootNodes":[{"typeName":"Query","fieldNames":["test"]}],"overrideFieldPathFromAlias":true,"customGraphql":{"fetch":{"url":{"staticVariableContent":"http://localhost:8080/query"},"method":"POST","body":{},"baseUrl":{},"path":{}},"subscription":{"enabled":true,"url":{"staticVariableContent":"http://localhost:8080/query"},"protocol":"GRAPHQL_SUBSCRIPTION_PROTOCOL_WS"},"federation":{"enabled":true,"serviceSdl":"type Query {\n  test(filter: TestFilter, a: Int! = 10, b: Int! = 50): Int!\n}\n\ninput TestFilter {\n  a: TestSubFilter\n  b: TestSubFilter\n}\n\ninput TestSubFilter {\n  a: String\n  b: String\n}\n\n\nextend schema @link(\n  url: \"https://specs.apollo.dev/federation/v2.3\",\n  import: [\"@external\", \"@requires\", \"@provides\", \"@key\", \"@shareable\", \"@inaccessible\", \"@tag\", \"@override\", \"@composeDirective\", \"@extends\"]\n)"},"upstreamSchema":{"key":"ff47b8f11ff1d6c665e7ba8e5657f743de825afe"}},"requestTimeoutSeconds":"10","id":"0"}],"fieldConfigurations":[{"typeName":"Query","fieldName":"test","argumentsConfiguration":[{"name":"filter","sourceType":"FIELD_ARGUMENT"},{"name":"a","sourceType":"FIELD_ARGUMENT"},{"name":"b","sourceType":"FIELD_ARGUMENT"}]}],"graphqlSchema":"directive @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\nscalar openfed__Scope\n\ntype Query {\n  test(filter: TestFilter, a: Int! = 10, b: Int! = 50): Int!\n}\n\ninput TestFilter {\n  a: TestSubFilter\n  b: TestSubFilter\n}\n\ninput TestSubFilter {\n  a: String\n  b: String\n}","stringStorage":{"ff47b8f11ff1d6c665e7ba8e5657f743de825afe":"schema {\n  query: Query\n}\n\ndirective @authenticated on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @composeDirective(name: String!) repeatable on SCHEMA\n\ndirective @eventsPublish(sourceName: String! = \"default\", topic: String!) on FIELD_DEFINITION\n\ndirective @eventsRequest(sourceName: String! = \"default\", topic: String!) on FIELD_DEFINITION\n\ndirective @eventsSubscribe(sourceName: String! = \"default\", topic: String!) on FIELD_DEFINITION\n\ndirective @extends on INTERFACE | OBJECT\n\ndirective @external on FIELD_DEFINITION | OBJECT\n\ndirective @inaccessible on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ndirective @interfaceObject on OBJECT\n\ndirective @key(fields: openfed__FieldSet!, resolvable: Boolean = true) repeatable on INTERFACE | OBJECT\n\ndirective @link(as: String, for: String, import: [String], url: String!) repeatable on SCHEMA\n\ndirective @override(from: String!) on FIELD_DEFINITION\n\ndirective @provides(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requires(fields: openfed__FieldSet!) on FIELD_DEFINITION\n\ndirective @requiresScopes(scopes: [[openfed__Scope!]!]!) on ENUM | FIELD_DEFINITION | INTERFACE | OBJECT | SCALAR\n\ndirective @shareable on FIELD_DEFINITION | OBJECT\n\ndirective @tag(name: String!) repeatable on ARGUMENT_DEFINITION | ENUM | ENUM_VALUE | FIELD_DEFINITION | INPUT_FIELD_DEFINITION | INPUT_OBJECT | INTERFACE | OBJECT | SCALAR | UNION\n\ntype Query {\n  test(a: Int! = 10, b: Int! = 50, filter: TestFilter): Int!\n}\n\ninput TestFilter {\n  a: TestSubFilter\n  b: TestSubFilter\n}\n\ninput TestSubFilter {\n  a: String\n  b: String\n}\n\nscalar openfed__FieldSet\n\nscalar openfed__Scope"}},"subgraphs":[{"id":"0","name":"test","routingUrl":"http://localhost:8080/query"}]}